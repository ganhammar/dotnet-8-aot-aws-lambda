name: CI-CD

on:
  workflow_dispatch:
  push:

permissions:
  id-token: write
  contents: read

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET Core SDKs
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-north-1
          role-to-assume: ${{ secrets.DEPLOY_ROLE }}
          role-session-name: OIDCSession

      - name: Restore
        run: dotnet restore --runtime linux-x64
      - name: Build
        run: dotnet build --no-restore

      - name: Publish PostFunction
        run: dotnet publish --no-build --configuration Release --output ../../.output/PostFunction
        working-directory: ./src/PostFunction
      - name: Zip PostFunction
        run: zip -q -D ../PostFunction.zip *
        working-directory: ./.output/PostFunction
      - name: Publish GetFunction
        run: dotnet publish --no-build --configuration Release --output ../../.output/GetFunction
        working-directory: ./src/GetFunction
      - name: Zip GetFunction
        run: zip -q -D ../GetFunction.zip *
        working-directory: ./.output/GetFunction

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Setup CDK
        run: npm install -g aws-cdk
      - name: CDK Bootstrap
        run: cdk bootstrap
      - name: CDK Deploy
        run: cdk deploy --require-approval never --all
